---
- name: Install Kubernetes support applications
  hosts: local
  connection: local
  gather_facts: no
  vars_files:
    - secret.yml
  tasks:
    - name: Deploy the Kubernetes Dashboard application
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition: '{{ lookup("file", "./files/kubernetes-dashboard.yml") }}'

    - name: Create the kubernetes-dashboard namespace
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: kubernetes-dashboard
            labels:
              name: kubernetes-dashboard

    - name: Create a service account with the name admin-user in namespace kubernetes-dashboard
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: admin-user
            namespace: kubernetes-dashboard

    - name: Create the ClusterRoleBinding for the admin-user
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: admin-user
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
            - kind: ServiceAccount
              name: admin-user
              namespace: kubernetes-dashboard

    - name: K9s Reader ClusterRole
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          kind: ClusterRole
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: k9s
          rules:
            # Grant RO access to cluster resources node and namespace
            - apiGroups: [""]
              resources: ["nodes", "namespaces"]
              verbs: ["get", "list", "watch"]
            # Grant RO access to RBAC resources
            - apiGroups: ["rbac.authorization.k8s.io"]
              resources: ["clusterroles", "roles", "clusterrolebindings", "rolebindings"]
              verbs: ["get", "list", "watch"]
            # Grants RO access to CRD resources
            - apiGroups: ["apiextensions.k8s.io"]
              resources: ["customresourcedefinitions"]
              verbs: ["get", "list", "watch"]
            # Grants RO access to metric server
            - apiGroups: ["metrics.k8s.io"]
              resources: ["nodes", "pods"]
              verbs: ["get", "list", "watch"]

    - name: K9s Reader ClusterRole
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          # Sample K9s user ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: k9s
          subjects:
            - apiGroup: rbac.authorization.k8s.io
              kind: User
              name: kubernetes
          roleRef:
            kind: ClusterRole
            name: k9s
            apiGroup: rbac.authorization.k8s.io