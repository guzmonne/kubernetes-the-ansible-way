---
- name: Create the Master group
  hosts: local
  connection: local
  gather_facts: no
  vars_files:
    - secret.yml
  vars:
    node_type: master
    group_name: masters
  roles:
    - create_dynamic_node_group
  tasks:
    - set_fact:
        etcd_servers: >
          {{ 
            ( etcd_servers | default([]) )
            + [
              "https://"
              + hostvars[item]["ansible_host"]
              + ":2379"
            ] 
          }}
      loop: '{{ groups["masters"] }}'

    - name: Creating the etcd_servers variable
      add_host:
        name: DUMMY
        etcd_servers: '{{ etcd_servers | join(",") }}'

- name: Create the Kubernetes Contrl Plane
  hosts: masters
  gather_facts: no
  vars_files:
    - secret.yml
  tasks:
    - name: Create directories
      file:
        state: directory
        path: '{{ item }}'
      become: true
      loop:
        - /etc/kubernetes/config
        - /var/lib/kubernetes

    - name: Download binaries
      get_url:
        url: 'https://storage.googleapis.com/kubernetes-release/release/v1.15.3/bin/linux/amd64/{{ item }}'
        dest: '/usr/local/bin/{{ item }}'
        mode: '0744'
      become: true
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
        - kubectl

    - name: Copy files to the Kubernetes directory
      copy:
        src: './tls/{{ item }}'
        dest: '/var/lib/kubernetes/{{ item }}'
        mode: '0644'
      become: true
      loop:
        - ca.pem
        - ca-key.pem
        - kubernetes-key.pem
        - kubernetes.pem
        - service-account-key.pem
        - service-account.pem
        - encryption-config.yaml

    - name: Move the kubeconfig files to the Kubernetes directory
      copy:
        src: './kubeconfigs/{{ item }}'
        dest: '/var/lib/kubernetes/{{ item }}'
        mode: '0644'
      become: true
      loop:
        - kube-controller-manager.kubeconfig
        - kube-scheduler.kubeconfig
    
    - name: Create the services file
      template:
        src: './templates/{{ item }}'
        dest: '/etc/systemd/system/{{ item }}'
        mode: '0644'
      become: true
      vars:
        etcd_servers: '{{ hostvars["DUMMY"]["etcd_servers"] }}'
      loop:
        - kube-apiserver.service
        - kube-controller-manager.service
        - kube-scheduler.service
    
    - name: Create the kube-scheduler.yaml configuration file
      template:
        src: ./templates/kube-scheduler.yaml
        dest: '/etc/kubernetes/config/kube-scheduler.yaml'
        mode: '0644'
      become: true

    - name: Install nginx
      apt:
        name: "{{ packages }}"
        update_cache: yes
      become: true
      vars:
        packages:
        - nginx

    - name: Create the kubernetes.default.svc.cluster.local nginx configuration file
      template:
        src: './templates/kubernetes.default.svc.cluster.local'
        dest: '/etc/nginx/sites-available/kubernetes.default.svc.cluster.local'
        mode: '0644'
      become: true

    - name: Enable the kubernetes.default.svc.cluster.local site
      file:
        src: "/etc/nginx/sites-available/kubernetes.default.svc.cluster.local"
        dest: "/etc/nginx/sites-enabled/kubernetes.default.svc.cluster.local"
        state: link
      become: true

    - name: Restart the nginx service
      systemd:
        state: restarted
        daemon_reload: yes
        name: 'nginx'
      become: true

    - name: Systemd Daemon Reload
      systemd:
        daemon_reload: yes
      become: true

    - name: Start the services
      service:
        name: '{{ item }}'
        state: started
        enabled: yes
      become: true
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler

- name: RBAC for Kubelet Authorization
  hosts: local
  connection: local
  gather_facts: no
  tags:
    - kubectl
  vars_files:
    - secret.yml
  tasks:  
    - name: Create the system:kube-apiserver-to-kubelet ClusterRole
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRole
          metadata:
            annotations:
              rbac.authorization.kubernetes.io/autoupdate: "true"
            labels:
              kubernetes.io/bootstrapping: rbac-defaults
            name: system:kube-apiserver-to-kubelet
          rules:
            - apiGroups:
                - ""
              resources:
                - nodes/proxy
                - nodes/stats
                - nodes/log
                - nodes/spec
                - nodes/metrics
              verbs:
                - "*"
    - name: Bind the system:kube-apiserver-to-kubelet ClusterRole to the kubernetes user
      k8s:
        state: present
        kubeconfig: './kubeconfigs/{{ project_name }}.kubeconfig'
        definition:
          apiVersion: rbac.authorization.k8s.io/v1beta1
          kind: ClusterRoleBinding
          metadata:
            name: system:kube-apiserver
            namespace: ""
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: system:kube-apiserver-to-kubelet
          subjects:
            - apiGroup: rbac.authorization.k8s.io
              kind: User
              name: Kubernetes