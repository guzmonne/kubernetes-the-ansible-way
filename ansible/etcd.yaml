---
- name: Create the Master group
  hosts: local
  connection: local
  gather_facts: no
  vars_files:
    - secret.yml
  tags:
    - copy
  tasks:
    - name: Get bastion node
      ec2_instance_facts:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        aws_region: '{{ aws_region }}'
        filters:
          "tag:Type": bastion
          instance-state-name: ["running"]
      register: bastion_nodes

    - name: Get the IP address of the bastion
      set_fact:
        bastion_public_ip: '{{ bastion_nodes.instances[0].public_ip_address }}'

    - name: Get master nodes
      ec2_instance_facts:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        aws_region: '{{ aws_region }}'
        filters:
          "tag:Type": master
          instance-state-name: ["running"]
      register: master_nodes

    - name: Create the initial_cluster var
      set_fact:
        initial_cluster: '{{ initial_cluster | default([]) }}'
    
    - name: Create the masters group
      add_host:
        name: '{{ item.instance_id }}'
        group: masters
        instance_id: '{{ item.instance_id }}'
        initial_cluster: '{{ initial_cluster }}'
        ansible_host: '{{ item.network_interfaces[0].private_ip_address }}'
        ansible_ssh_private_key_file: ./output/kube.pem
        ansible_ssh_user: ubuntu
        ansible_python_interpreter: /usr/bin/python3
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o ProxyCommand="ssh -W %h:%p -i ./output/kube.pem -q ubuntu@{{ bastion_public_ip }} -o StrictHostKeyChecking=no"'
      loop: '{{ master_nodes.instances }}'

- name: Create the etcd cluster
  hosts: masters
  gather_facts: no
  vars_files:
    - secret.yml
  tags:
    - copy
  tasks:
    - name: Download the etcd Binaries
      get_url:
        url: https://github.com/coreos/etcd/releases/download/v3.3.9/etcd-v3.3.9-linux-amd64.tar.gz
        dest: '/home/{{ ansible_ssh_user }}/etcd-v3.3.9-linux-amd64.tar.gz'
        mode: '0644'

    - name: Untar etcd
      unarchive:
        src: '/home/{{ ansible_ssh_user }}/etcd-v3.3.9-linux-amd64.tar.gz'
        dest: '/home/{{ ansible_ssh_user }}/etcd-v3.3.9-linux-amd64'

    - name: Install etcd
      shell: 'mv etcd-v3.3.9-linux-amd64/etcd* /usr/local/bin/'
      become: true

    - name: Make the /etc/etcd directory
      file:
        state: directory
        path: '/etc/etcd'
      become: true

    - name: Make the /var/lib/etcd directory
      file:
        state: directory
        path: '/var/lib/etcd'
      become: true

    - name: Copy ca.pem to /etc/etcd/
      copy:
        src: '/home/{{ ansible_ssh_user }}/ca.pem'
        dest: '/etc/etcd/ca.pem'
        remote_src: yes
      become: true

    - name: Copy kubernetes-key.pem to /etc/etcd/
      copy:
        src: '/home/{{ ansible_ssh_user }}/kubernetes-key.pem'
        dest: '/etc/etcd/kubernetes-key.pem'
        remote_src: yes
      become: true

    - name: Copy kubernetes.pem to /etc/etcd/
      copy:
        src: '/home/{{ ansible_ssh_user }}/kubernetes.pem'
        dest: '/etc/etcd/kubernetes.pem'
        remote_src: yes
      become: true

